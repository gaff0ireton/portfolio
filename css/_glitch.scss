@function rand($min, $max) {
    @return random() * ($max - $min)+$min;
}

$animation-duration: 3s;
$glitch-duration: 20%;
$glitch-frequency: 10;
$glitch-interval: $glitch-duration / $glitch-frequency;

@mixin rgb-shift($name) {
    @keyframes rgb-shift-#{$name} {
        @for $i from 0 to $glitch-frequency {
            #{$i * $glitch-interval} {
                transform: translate(#{rand(-2, 2) * 1%},
                    #{rand(-0.5, 0.5) * 1%});
            }
        }

        #{$glitch-duration},
        100% {
            transform: none;
        }
    }

    animation: rgb-shift-#{$name} $animation-duration steps(1, jump-end) infinite alternate both;
}

@mixin glitch($name) {
    @keyframes glitch-#{$name} {
        @for $i from 0 to $glitch-frequency {
            $left: 0%;
            $right: 100%;
            $top: rand(0, 90) * 1%;
            $bottom: $top + rand(1, 10) * 1%;

            #{$i * $glitch-interval} {
                clip-path: polygon($left $top,
                        $right $top,
                        $right $bottom,
                        $left $bottom );
                transform: translate(#{rand(-8, 8) * 1%},
                    #{rand(-0.5, 0.5) * 1%});
            }
        }

        #{$glitch-duration},
        100% {
            clip-path: none;
            transform: none;
        }
    }

    animation: glitch-#{$name} $animation-duration linear infinite alternate both;
}

body {
    margin: 0;
}

.glitch {
    background: #000 no-repeat center;
    background-size: 0;
    height: 100vh;
    position: relative;
    overflow: hidden;

    &::before,
    &::after,
    .channel {
        background: inherit;
        background-size: cover;
        bottom: 0;
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
        z-index: -1;
    }

    &::before {
        @include glitch(before);
        content: "";
    }

    &::after {
        @include glitch(after);
        content: "";
    }

    .channel {
        // mix-blend-mode: screen;

        &::before {
            bottom: 0;
            content: "";
            display: block;
            mix-blend-mode: multiply;
            position: absolute;
            left: 0;
            right: 0;
            top: 0;
        }
    }

    .r {
        @include rgb-shift(r);

        &::before {
            background: #f00;
        }
    }

    .g {
        @include rgb-shift(g);

        &::before {
            background: #0f0;
        }
    }

    .b {
        @include rgb-shift(b);

        &::before {
            background: #00f;
        }
    }
}

// .glitchLoad {
//     background-image: url(../images/cyberspace_02.png);
//     background-color: black;
//     background-position: center;
//     background-repeat: no-repeat;
//     background-size: cover;
//     width: 100%;
//     height: 100vh;
//     position: relative;
//     overflow: hidden;
//     z-index: 150;

//     &::before,
//     &::after {
//         background: inherit;
//         background-size: cover;
//         bottom: 0;
//         left: 0;
//         position: absolute;
//         right: 0;
//         top: 0;
//     }

//     &::before {
//         @include glitch(before);
//         content: "";
//     }

//     &::after {
//         @include glitch(after);
//         content: "";
//     }
// }

.glitchText {
    color: white;
    position: relative;
    width: fit-content;
    white-space: nowrap;
    margin: 0 auto;
}

@keyframes noise-anim {
    $steps: 20;

    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(100)+px, 9999px, random(100)+px, 0);
        }
    }
}



.glitchText:after {
    content: attr(data-text);
    position: absolute;
    left: 2px;
    text-shadow: -1px 0 red;
    top: 0;
    color: white;
    background: rgba(0, 0, 0, 0);
    overflow: hidden;
    clip: rect(0, 900px, 0, 0);
    animation: noise-anim 2s infinite linear alternate-reverse;
    
}

@keyframes noise-anim-2 {
    $steps: 20;

    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(100)+px, 9999px, random(100)+px, 0);
        }
    }
}

.glitchText:before {
    content: attr(data-text);
    position: absolute;
    left: -2px;
    text-shadow: 1px 0 blue;
    top: 0;
    color: white;
    background: rgba(0, 0, 0, 0);
    overflow: hidden;
    clip: rect(0, 900px, 0, 0);
    animation: noise-anim-2 3s infinite linear alternate-reverse;
}

.glitchTextLoad {
    color: rgb(175, 175, 175);
    position: relative;
    width: fit-content;
    white-space: nowrap;
    font-family: 'DotGothic16', sans-serif;
    font-size: 2rem;
    line-height: 2.5rem;
}

@keyframes noise-anim {
    $steps: 20;

    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(100)+px, 9999px, random(100)+px, 0);
        }
    }
}



.glitchTextLoad:after {
    content: attr(data-text);
    position: absolute;
    left: 2px;
    text-shadow: -1px 0 red;
    top: 0;
    color:(175, 175, 175);
    background: rgb(0, 0, 0);
    overflow: hidden;
    clip: rect(0, 900px, 0, 0);
    animation: noise-anim 2s infinite linear alternate-reverse;
    
}

@keyframes noise-anim-2 {
    $steps: 20;

    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(100)+px, 9999px, random(100)+px, 0);
        }
    }
}

.glitchTextLoad:before {
    content: attr(data-text);
    position: absolute;
    left: -2px;
    text-shadow: 1px 0 blue;
    top: 0;
    color: (175, 175, 175);
    background: rgb(0, 0, 0);
    overflow: hidden;
    clip: rect(0, 900px, 0, 0);
    animation: noise-anim-2 3s infinite linear alternate-reverse;
}